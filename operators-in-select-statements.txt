Exercises

1. Write out a generic SELECT statement.

A:

SELECT <column1, column2,...>
FROM nameOfTable(s)
WHERE <condition(s)> 

SELECT column1
FROM generic
WHERE id= 12345;

2. Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.

A: Stats For Jason Williams Highlights On Lookaways

3. Given this `dogs` table, write queries to select the following pieces of data:

Intake teams typically guess the breed of shelter dogs, so the 	`breed` column may have multiple words (for example "Labrador Collie mix").

- Display the name, gender, and age of all dogs that are part Labrador.

SELECT name, gender, age
FROM dogs
WHERE breed LIKE '%labrador%';

- Display the ids of all dogs that are under 1 year old.

SELECT id
FROM dogs
WHERE age <1;

- Display the name and age of all dogs that are female and over 35lbs.

SELECT name, age
FROM dogs
WHERE gender = 'F' AND weight >35;

- Display all of the information about all dogs that are not Shepherd mixes.

SELECT *
FROM dogs
WHERE breed NOT LIKE'%shepherd%';

- Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.

SELECT id, age, weight, breed
FROM dogs
WHERE weight > 60;

4. Given this `cats` table, what records are returned from these queries?

- SELECT name, adoption_date FROM cats;

Two columns: name and adoption_date for every cat in the table


    Select name, adoption_date
    FROM cats;

| name     | adoption_date            |
| -------- | ------------------------ |
| Mushi    | 2016-03-22T00:00:00.000Z |
| Seashell |                          |
| Azul     | 2016-04-17T00:00:00.000Z |
| Victoire | 2016-09-01T00:00:00.000Z |
| Nala     |                          |

---

- SELECT name, age FROM cats;

Two columns: name and age for every cat in the table


    Select name, age
    FROM cats;

| name     | age |
| -------- | --- |
| Mushi    | 1   |
| Seashell | 7   |
| Azul     | 3   |
| Victoire | 7   |
| Nala     | 1   |

---

5. From the `cats` table, write queries to select the following pieces of data.

- Display all the information about all of the available cats.

Select *
FROM cats;

- Display the name and sex of all cats who are 7 years old.

Select name, gender
FROM cats
WHERE age=7;

- Find all of the names of the cats, so you don't choose duplicate names for new cats.

Select name
FROM cats;


6. List each comparison operator and explain when you would use it. Include a real world example for each. 

A: 

> greater than. One condition is greater than another condition. An example would be comparing a person's weight is greater than another person

< less than. One condition is less than another condition. An example is one person is younger than another person.

>= greater than or equal to. One condition is greater than or equal to a number. An example is if a person is 40 inches or higher to ride a roller coaster.

<= less than or equal too. One condition is less than or equal to a number. An example would be if there's any students who scored 70 and below. 

= equal. If a condition is equal to the target. 5 = 5

=! or <> not equal.  The condition does not equal to the target. An example would be finding matches for dogs who are not collies. 


7. From the `cats` table what data is returned from these queries?

- SELECT name FROM cats WHERE gender = 'F';



| name     |
| -------- |
| Seashell |
| Nala     |

---


- SELECT name FROM cats WHERE age <> 3;



| name     |
| -------- |
| Mushi    |
| Seashell |
| Victoire |
| Nala     |

---

- SELECT ID FROM cats WHERE name != 'Mushi' AND gender = 'M';


| id  |
| --- |
| 3   |
| 4   |

---


